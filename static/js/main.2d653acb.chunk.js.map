{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["quotesData","currentQuote","currentAuthor","colors","App","props","state","date","Date","id","class","title","target","React","Component","getQuote","randomQuote","quotes","Math","floor","random","length","quote","author","$","attr","encodeURIComponent","animate","opacity","this","text","html","color","backgroundColor","ajax","headers","Accept","url","success","jsonQuotes","JSON","parse","console","log","then","on","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAMIA,E,2FACAC,G,MAAe,IACjBC,EAAgB,GACdC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAoDaC,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAAIC,MAFR,E,qDAMjB,OACE,qBAAKC,GAAG,UAAR,SAmBE,sBAAKA,GAAG,YAAR,UACE,sBAAKC,MAAM,aAAX,UACE,mBAAGA,MAAM,oBAAT,eAAkC,sBAAMD,GAAG,YAE7C,sBAAKC,MAAM,eAAX,eAA4B,sBAAMD,GAAG,cACrC,sBAAKC,MAAM,UAAX,UACE,mBACEA,MAAM,SACND,GAAG,cACHE,MAAM,oBACNC,OAAO,OAJT,SAME,mBAAGF,MAAM,qBAEX,wBAAQA,MAAM,SAASD,GAAG,YAA1B,mC,GAzCMI,IAAMC,WAyExB,SAASC,IACP,IAAIC,EANGhB,EAAWiB,OAChBC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAWiB,OAAOI,SAO/CpB,EAAee,EAAYM,MAC3BpB,EAAgBc,EAAYO,OAE5BC,IAAE,gBAAgBC,KAChB,OACA,8EACEC,mBAAmB,IAAMzB,EAAe,KAAOC,IAGnDsB,IAAE,eAAeG,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC5CJ,IAAEK,MAAMF,QAAQ,CAAEC,QAAS,GAAK,KAChCJ,IAAE,SAASM,KAAKd,EAAYM,UAG9BE,IAAE,iBAAiBG,QAAQ,CAAEC,QAAS,GAAK,KAAK,WAC9CJ,IAAEK,MAAMF,QAAQ,CAAEC,QAAS,GAAK,KAChCJ,IAAE,WAAWO,KAAKf,EAAYO,WAGhC,IAAIS,EAAQd,KAAKC,MAAMD,KAAKE,SAAWjB,EAAOkB,QAC9CG,IAAE,aAAaG,QACb,CACEM,gBAAiB9B,EAAO6B,GACxBA,MAAO7B,EAAO6B,IAEhB,KAEFR,IAAE,WAAWG,QACX,CACEM,gBAAiB9B,EAAO6B,IAE1B,KAIJR,KAAE,WA3DOA,IAAEU,KAAK,CACZC,QAAS,CACPC,OAAQ,oBAEVC,IAAK,yIACLC,QAAS,SAAUC,GACS,kBAAfA,IACTvC,EAAawC,KAAKC,MAAMF,GACxBG,QAAQC,IAAI,cACZD,QAAQC,IAAI3C,OAmDN4C,MAAK,WACf7B,OAGFS,IAAE,cAAcqB,GAAG,QAAS9B,MC5I9B,IAYe+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d653acb.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n//import logo from './logo.svg';\nimport React from 'react';\nimport $ from 'jquery';\nimport './App.css';\n\nlet quotesData;\nvar currentQuote = '',\n  currentAuthor = '';\nvar colors = [\n  '#16a085',\n  '#27ae60',\n  '#2c3e50',\n  '#f39c12',\n  '#e74c3c',\n  '#9b59b6',\n  '#FB6964',\n  '#342224',\n  '#472E32',\n  '#BDBB99',\n  '#77B1A9',\n  '#73A857'\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }  \n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        {/*\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n        </div>\n        */}\n        <div id=\"quote-box\">\n          <div class=\"quote-text\">\n            <i class=\"fas fa-quote-left\"> </i><span id=\"text\"></span>\n          </div>\n          <div class=\"quote-author\">- <span id=\"author\"></span></div>\n          <div class=\"buttons\">\n            <a\n              class=\"button\"\n              id=\"tweet-quote\"\n              title=\"Tweet this quote!\"\n              target=\"_top\"\n            >\n              <i class=\"fab fa-twitter\"></i>\n            </a>\n            <button class=\"button\" id=\"new-quote\">New quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction getQuotes() {\n  return $.ajax({\n    headers: {\n      Accept: 'application/json'\n    },\n    url: 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json',\n    success: function (jsonQuotes) {\n      if (typeof jsonQuotes === 'string') {\n        quotesData = JSON.parse(jsonQuotes);\n        console.log('quotesData');\n        console.log(quotesData);\n      }\n    }\n  });\n}\n\nfunction getRandomQuote() {\n  return quotesData.quotes[\n    Math.floor(Math.random() * quotesData.quotes.length)\n  ];\n}\n\nfunction getQuote() {\n  let randomQuote = getRandomQuote();\n\n  currentQuote = randomQuote.quote;\n  currentAuthor = randomQuote.author;\n\n  $('#tweet-quote').attr(\n    'href',\n    'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\n      encodeURIComponent('\"' + currentQuote + '\" ' + currentAuthor)\n  );\n\n  $('.quote-text').animate({ opacity: 0 }, 500, function () {\n    $(this).animate({ opacity: 1 }, 500);\n    $('#text').text(randomQuote.quote);\n  });\n\n  $('.quote-author').animate({ opacity: 0 }, 500, function () {\n    $(this).animate({ opacity: 1 }, 500);\n    $('#author').html(randomQuote.author);\n  });\n\n  var color = Math.floor(Math.random() * colors.length);\n  $('html body').animate(\n    {\n      backgroundColor: colors[color],\n      color: colors[color]\n    },\n    1000\n  );\n  $('.button').animate(\n    {\n      backgroundColor: colors[color]\n    },\n    1000\n  );\n}\n\n$(function () {\n  getQuotes().then(() => {\n    getQuote();\n  });\n\n  $('#new-quote').on('click', getQuote);\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}